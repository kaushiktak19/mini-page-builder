{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const [elements, setElements] = useState(() => {\n    const savedElements = localStorage.getItem('canvasElements');\n    return savedElements ? JSON.parse(savedElements) : [];\n  });\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('canvasElements', JSON.stringify(elements));\n  }, [elements]);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (selectedElement) {\n        if (event.key === 'Enter') {\n          setTempElement(selectedElement);\n          setModalOpen(true);\n        } else if (event.key === 'Delete') {\n          handleDeleteElement(selectedElement.id);\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedElement]);\n  const handleDrop = event => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const {\n      clientX,\n      clientY\n    } = event;\n    const canvasRect = event.currentTarget.getBoundingClientRect();\n    if (draggingElement) {\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: false\n      } : el);\n      setElements(updatedElements);\n      setDraggingElement(null);\n    } else {\n      const newElement = {\n        id: Date.now(),\n        type: elementType,\n        x: clientX - canvasRect.left,\n        y: clientY - canvasRect.top,\n        text: elementType === 'label' ? 'Label' : elementType === 'input' ? '' : 'Button',\n        fontSize: '16px',\n        fontWeight: 'normal'\n      };\n      setTempElement(newElement);\n      setModalOpen(true);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    if (draggingElement) {\n      const {\n        clientX,\n        clientY\n      } = event;\n      const canvasRect = event.currentTarget.getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: true\n      } : el);\n      setElements(updatedElements);\n    }\n  };\n  const handleSaveChanges = config => {\n    const updatedElements = elements.map(el => el.id === tempElement.id ? {\n      ...el,\n      ...config\n    } : el);\n    if (!elements.some(el => el.id === tempElement.id)) {\n      setElements([...elements, {\n        ...tempElement,\n        ...config\n      }]);\n    } else {\n      setElements(updatedElements);\n    }\n    setModalOpen(false);\n    setTempElement(null);\n  };\n  const handleDeleteElement = id => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n    setSelectedElement(null);\n  };\n  const handleElementClick = (el, event) => {\n    event.stopPropagation();\n    setSelectedElement(el);\n  };\n  const handleCanvasClick = () => {\n    setSelectedElement(null);\n  };\n  const handleDragStart = (el, event) => {\n    event.dataTransfer.setData('text/plain', el.type);\n    setDraggingElement(el);\n  };\n  const handleDragEnd = event => {\n    if (draggingElement) {\n      const {\n        clientX,\n        clientY\n      } = event;\n      const canvasRect = document.querySelector('.canvas').getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: false\n      } : el);\n      setElements(updatedElements);\n      setDraggingElement(null);\n    }\n  };\n  const renderElement = el => {\n    if (el.type === 'label') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: el.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 14\n      }, this);\n    } else if (el.type === 'input') {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 14\n      }, this);\n    } else if (el.type === 'button') {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        children: el.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    onClick: handleCanvasClick,\n    tabIndex: \"0\",\n    children: [elements.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: el.id,\n      className: `element ${(selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === el.id || (draggingElement === null || draggingElement === void 0 ? void 0 : draggingElement.id) === el.id ? 'selected' : ''}`,\n      style: {\n        left: el.x,\n        top: el.y,\n        position: 'absolute',\n        cursor: 'grab',\n        opacity: el.isDragging ? 0 : 1,\n        fontSize: el.fontSize,\n        fontWeight: el.fontWeight,\n        width: el.type === 'input' ? '298px' : el.type === 'button' ? '77px' : 'auto',\n        height: '49px',\n        background: el.type === 'input' ? '#FFFFFF' : el.type === 'button' ? '#0044C1' : 'transparent',\n        border: el.type === 'input' ? '1px solid rgba(0, 0, 0, 0.07)' : 'none',\n        color: el.type === 'button' ? '#FFFFFF' : '#000000',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      draggable: true,\n      onClick: event => handleElementClick(el, event),\n      onDragStart: event => handleDragStart(el, event),\n      onDragEnd: handleDragEnd,\n      children: renderElement(el)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      element: tempElement,\n      onSaveChanges: handleSaveChanges,\n      onClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"FxSJfRJd2KxLZSK49rj1BMZ7XCo=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","Canvas","_s","elements","setElements","savedElements","localStorage","getItem","JSON","parse","modalOpen","setModalOpen","tempElement","setTempElement","selectedElement","setSelectedElement","draggingElement","setDraggingElement","setItem","stringify","handleKeyDown","event","key","handleDeleteElement","id","window","addEventListener","removeEventListener","handleDrop","preventDefault","elementType","dataTransfer","getData","clientX","clientY","canvasRect","currentTarget","getBoundingClientRect","elementRect","document","getElementById","x","Math","min","max","left","width","y","top","height","updatedElements","map","el","isDragging","newElement","Date","now","type","text","fontSize","fontWeight","handleDragOver","handleSaveChanges","config","some","filter","handleElementClick","stopPropagation","handleCanvasClick","handleDragStart","setData","handleDragEnd","querySelector","renderElement","children","fileName","_jsxFileName","lineNumber","columnNumber","style","className","onDragOver","onDrop","onClick","tabIndex","index","position","cursor","opacity","background","border","color","display","alignItems","justifyContent","draggable","onDragStart","onDragEnd","element","onSaveChanges","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/Canvas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css';\n\nfunction Canvas() {\n  const [elements, setElements] = useState(() => {\n    const savedElements = localStorage.getItem('canvasElements');\n    return savedElements ? JSON.parse(savedElements) : [];\n  });\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('canvasElements', JSON.stringify(elements));\n  }, [elements]);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (selectedElement) {\n        if (event.key === 'Enter') {\n          setTempElement(selectedElement);\n          setModalOpen(true);\n        } else if (event.key === 'Delete') {\n          handleDeleteElement(selectedElement.id);\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedElement]);\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const { clientX, clientY } = event;\n\n    const canvasRect = event.currentTarget.getBoundingClientRect();\n\n    if (draggingElement) {\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n\n      const updatedElements = elements.map(el =>\n        el.id === draggingElement.id ? { ...el, x, y, isDragging: false } : el\n      );\n      setElements(updatedElements);\n      setDraggingElement(null);\n    } else {\n      const newElement = {\n        id: Date.now(),\n        type: elementType,\n        x: clientX - canvasRect.left,\n        y: clientY - canvasRect.top,\n        text: elementType === 'label' ? 'Label' : elementType === 'input' ? '' : 'Button',\n        fontSize: '16px',\n        fontWeight: 'normal'\n      };\n\n      setTempElement(newElement);\n      setModalOpen(true);\n    }\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    if (draggingElement) {\n      const { clientX, clientY } = event;\n      const canvasRect = event.currentTarget.getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n\n      const updatedElements = elements.map(el =>\n        el.id === draggingElement.id ? { ...el, x, y, isDragging: true } : el\n      );\n      setElements(updatedElements);\n    }\n  };\n\n  const handleSaveChanges = (config) => {\n    const updatedElements = elements.map(el =>\n      el.id === tempElement.id ? { ...el, ...config } : el\n    );\n\n    if (!elements.some(el => el.id === tempElement.id)) {\n      setElements([...elements, { ...tempElement, ...config }]);\n    } else {\n      setElements(updatedElements);\n    }\n\n    setModalOpen(false);\n    setTempElement(null);\n  };\n\n  const handleDeleteElement = (id) => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n    setSelectedElement(null);\n  };\n\n  const handleElementClick = (el, event) => {\n    event.stopPropagation();\n    setSelectedElement(el);\n  };\n\n  const handleCanvasClick = () => {\n    setSelectedElement(null);\n  };\n\n  const handleDragStart = (el, event) => {\n    event.dataTransfer.setData('text/plain', el.type);\n    setDraggingElement(el);\n  };\n\n  const handleDragEnd = (event) => {\n    if (draggingElement) {\n      const { clientX, clientY } = event;\n      const canvasRect = document.querySelector('.canvas').getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n\n      const updatedElements = elements.map(el =>\n        el.id === draggingElement.id ? { ...el, x, y, isDragging: false } : el\n      );\n      setElements(updatedElements);\n      setDraggingElement(null);\n    }\n  };\n\n  const renderElement = (el) => {\n    if (el.type === 'label') {\n      return <div>{el.text}</div>;\n    } else if (el.type === 'input') {\n      return <input type=\"text\" style={{ width: '100%', height: '100%' }} />;\n    } else if (el.type === 'button') {\n      return <button style={{ width: '100%', height: '100%' }}>{el.text}</button>;\n    }\n  };\n\n  return (\n    <div\n      className='canvas'\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n      onClick={handleCanvasClick}\n      tabIndex=\"0\"\n    >\n      {elements.map((el, index) => (\n        <div\n          id={el.id}\n          key={index}\n          className={`element ${selectedElement?.id === el.id || draggingElement?.id === el.id ? 'selected' : ''}`}\n          style={{\n            left: el.x,\n            top: el.y,\n            position: 'absolute',\n            cursor: 'grab',\n            opacity: el.isDragging ? 0 : 1,\n            fontSize: el.fontSize,\n            fontWeight: el.fontWeight,\n            width: el.type === 'input' ? '298px' : el.type === 'button' ? '77px' : 'auto',\n            height: '49px',\n            background: el.type === 'input' ? '#FFFFFF' : el.type === 'button' ? '#0044C1' : 'transparent',\n            border: el.type === 'input' ? '1px solid rgba(0, 0, 0, 0.07)' : 'none',\n            color: el.type === 'button' ? '#FFFFFF' : '#000000',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n          draggable={true}\n          onClick={(event) => handleElementClick(el, event)}\n          onDragStart={(event) => handleDragStart(el, event)}\n          onDragEnd={handleDragEnd}\n        >\n          {renderElement(el)}\n        </div>\n      ))}\n\n      {modalOpen && (\n        <Modal\n          element={tempElement}\n          onSaveChanges={handleSaveChanges}\n          onClose={() => setModalOpen(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}