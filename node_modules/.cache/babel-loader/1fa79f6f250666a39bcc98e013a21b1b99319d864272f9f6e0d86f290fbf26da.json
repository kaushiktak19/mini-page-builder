{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\components\\\\Board\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DropTarget } from 'react-drag-drop-container';\nimport { Label, Input, Button } from '../Elements';\nimport ElementWrapper from '../ElementWrapper/ElementWrapper';\nimport Modal from '../Modal/Modal';\nimport styles from './board.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [boardElements, setBoardElements] = useState([]);\n  const boardRef = useRef(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [initialElement, setInitialElement] = useState(null);\n  useEffect(() => {\n    const boardElementsInLocalStorage = localStorage.getItem('boardElements');\n    if (boardElementsInLocalStorage) {\n      setBoardElements(JSON.parse(boardElementsInLocalStorage));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('boardElements', JSON.stringify(boardElements));\n  }, [boardElements]);\n  const handleOnDragOver = e => {\n    e.preventDefault();\n  };\n  const handleOnDrop = e => {\n    e.preventDefault();\n    setSelectedElement(null);\n    if (e.dragData) {\n      setInitialElement({\n        id: uuidv4(),\n        elementType: e.dragData.elementType,\n        config: {\n          text: e.dragData.elementType,\n          x: e.x.toString(),\n          y: e.y.toString(),\n          fontSize: '',\n          fontWeight: ''\n        }\n      });\n      setModalOpen(true);\n    }\n  };\n  const handleBoardOnClick = e => {\n    if (e.target === boardRef.current) {\n      setSelectedElement(null);\n    }\n  };\n  const addBoardElement = newElement => {\n    setBoardElements([...boardElements, newElement]);\n  };\n  const deleteBoardElement = elementID => {\n    setBoardElements(boardElements.filter(element => element.id !== elementID));\n  };\n  const updateBoardElement = (elementID, elementConfig) => {\n    setBoardElements(boardElements.map(element => {\n      if (element.id === elementID) {\n        return {\n          ...element,\n          config: elementConfig\n        };\n      }\n      return element;\n    }));\n  };\n  const getElementJSX = element => {\n    const style = {\n      fontSize: `${element.config.fontSize}px`,\n      fontWeight: parseInt(`${element.config.fontWeight}`, 10) || 400\n    };\n    switch (element.elementType) {\n      case 'Label':\n        return /*#__PURE__*/_jsxDEV(Label, {\n          text: element.config.text,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this);\n      case 'Input':\n        return /*#__PURE__*/_jsxDEV(Input, {\n          text: element.config.text,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this);\n      case 'Button':\n        return /*#__PURE__*/_jsxDEV(Button, {\n          text: element.config.text,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const handleOnKeyDown = e => {\n    if (selectedElement) {\n      if (e.key === 'Enter') {\n        setModalOpen(true);\n      } else if (e.key === 'Delete') {\n        deleteBoardElement(selectedElement.id);\n      }\n    }\n  };\n  const onElementSave = (elementID, elementConfig) => {\n    updateBoardElement(elementID, elementConfig);\n    setModalOpen(false);\n    setSelectedElement(null);\n  };\n  const onNewElementSave = elementConfig => {\n    if (initialElement) {\n      const newElement = {\n        id: initialElement.id,\n        elementType: initialElement.elementType,\n        config: {\n          text: elementConfig.text,\n          x: elementConfig.x,\n          y: elementConfig.y,\n          fontSize: elementConfig.fontSize || '',\n          fontWeight: elementConfig.fontWeight || ''\n        }\n      };\n      addBoardElement(newElement);\n      setInitialElement(null);\n    }\n    setModalOpen(false);\n  };\n  const onModalClose = () => {\n    setModalOpen(false);\n    setInitialElement(null);\n    setSelectedElement(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropTarget, {\n      targetKey: \"elements\",\n      dropData: {\n        foo: 'bar'\n      },\n      onHit: handleOnDrop,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: boardRef,\n        className: styles.Board,\n        onDragOver: handleOnDragOver,\n        onClick: handleBoardOnClick,\n        onKeyDown: handleOnKeyDown,\n        role: \"button\",\n        tabIndex: -1,\n        children: boardElements.map(element => {\n          return /*#__PURE__*/_jsxDEV(ElementWrapper, {\n            element: element,\n            updateBoardElement: updateBoardElement,\n            setSelectedElement: setSelectedElement,\n            selectedElement: selectedElement,\n            children: getElementJSX(element)\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      selectedElement: selectedElement,\n      initialElement: initialElement,\n      closeModal: onModalClose,\n      onElementSave: onElementSave,\n      onNewElementSave: onNewElementSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Board, \"ntwHZY3PchgUofGjdYakl++zbW0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useRef","useEffect","v4","uuidv4","DropTarget","Label","Input","Button","ElementWrapper","Modal","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","boardElements","setBoardElements","boardRef","modalOpen","setModalOpen","selectedElement","setSelectedElement","initialElement","setInitialElement","boardElementsInLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","handleOnDragOver","e","preventDefault","handleOnDrop","dragData","id","elementType","config","text","x","toString","y","fontSize","fontWeight","handleBoardOnClick","target","current","addBoardElement","newElement","deleteBoardElement","elementID","filter","element","updateBoardElement","elementConfig","map","getElementJSX","style","parseInt","fileName","_jsxFileName","lineNumber","columnNumber","handleOnKeyDown","key","onElementSave","onNewElementSave","onModalClose","children","targetKey","dropData","foo","onHit","ref","className","onDragOver","onClick","onKeyDown","role","tabIndex","open","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/components/Board/Board.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DropTarget } from 'react-drag-drop-container';\nimport { Label, Input, Button } from '../Elements';\nimport ElementWrapper from '../ElementWrapper/ElementWrapper';\nimport Modal from '../Modal/Modal';\nimport styles from './board.css';\n\nconst Board = () => {\n  const [boardElements, setBoardElements] = useState([]);\n  const boardRef = useRef(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [initialElement, setInitialElement] = useState(null);\n\n  useEffect(() => {\n    const boardElementsInLocalStorage = localStorage.getItem('boardElements');\n    if (boardElementsInLocalStorage) {\n      setBoardElements(JSON.parse(boardElementsInLocalStorage));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('boardElements', JSON.stringify(boardElements));\n  }, [boardElements]);\n\n  const handleOnDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleOnDrop = (e) => {\n    e.preventDefault();\n    setSelectedElement(null);\n    if (e.dragData) {\n      setInitialElement({\n        id: uuidv4(),\n        elementType: e.dragData.elementType,\n        config: {\n          text: e.dragData.elementType,\n          x: e.x.toString(),\n          y: e.y.toString(),\n          fontSize: '',\n          fontWeight: '',\n        },\n      });\n      setModalOpen(true);\n    }\n  };\n\n  const handleBoardOnClick = (e) => {\n    if (e.target === boardRef.current) {\n      setSelectedElement(null);\n    }\n  };\n\n  const addBoardElement = (newElement) => {\n    setBoardElements([...boardElements, newElement]);\n  };\n\n  const deleteBoardElement = (elementID) => {\n    setBoardElements(boardElements.filter((element) => element.id !== elementID));\n  };\n\n  const updateBoardElement = (elementID, elementConfig) => {\n    setBoardElements(\n      boardElements.map((element) => {\n        if (element.id === elementID) {\n          return { ...element, config: elementConfig };\n        }\n        return element;\n      })\n    );\n  };\n\n  const getElementJSX = (element) => {\n    const style = {\n      fontSize: `${element.config.fontSize}px`,\n      fontWeight: parseInt(`${element.config.fontWeight}`, 10) || 400,\n    };\n\n    switch (element.elementType) {\n      case 'Label':\n        return <Label text={element.config.text} style={style} />;\n      case 'Input':\n        return <Input text={element.config.text} style={style} />;\n      case 'Button':\n        return <Button text={element.config.text} style={style} />;\n      default:\n        return null;\n    }\n  };\n\n  const handleOnKeyDown = (e) => {\n    if (selectedElement) {\n      if (e.key === 'Enter') {\n        setModalOpen(true);\n      } else if (e.key === 'Delete') {\n        deleteBoardElement(selectedElement.id);\n      }\n    }\n  };\n\n  const onElementSave = (elementID, elementConfig) => {\n    updateBoardElement(elementID, elementConfig);\n    setModalOpen(false);\n    setSelectedElement(null);\n  };\n\n  const onNewElementSave = (elementConfig) => {\n    if (initialElement) {\n      const newElement = {\n        id: initialElement.id,\n        elementType: initialElement.elementType,\n        config: {\n          text: elementConfig.text,\n          x: elementConfig.x,\n          y: elementConfig.y,\n          fontSize: elementConfig.fontSize || '',\n          fontWeight: elementConfig.fontWeight || '',\n        },\n      };\n      addBoardElement(newElement);\n      setInitialElement(null);\n    }\n    setModalOpen(false);\n  };\n\n  const onModalClose = () => {\n    setModalOpen(false);\n    setInitialElement(null);\n    setSelectedElement(null);\n  };\n\n  return (\n    <>\n      <DropTarget targetKey=\"elements\" dropData={{ foo: 'bar' }} onHit={handleOnDrop}>\n        <div\n          ref={boardRef}\n          className={styles.Board}\n          onDragOver={handleOnDragOver}\n          onClick={handleBoardOnClick}\n          onKeyDown={handleOnKeyDown}\n          role=\"button\"\n          tabIndex={-1}\n        >\n          {boardElements.map((element) => {\n            return (\n              <ElementWrapper\n                key={element.id}\n                element={element}\n                updateBoardElement={updateBoardElement}\n                setSelectedElement={setSelectedElement}\n                selectedElement={selectedElement}\n              >\n                {getElementJSX(element)}\n              </ElementWrapper>\n            );\n          })}\n        </div>\n      </DropTarget>\n      <Modal\n        open={modalOpen}\n        selectedElement={selectedElement}\n        initialElement={initialElement}\n        closeModal={onModalClose}\n        onElementSave={onElementSave}\n        onNewElementSave={onNewElementSave}\n      />\n    </>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}