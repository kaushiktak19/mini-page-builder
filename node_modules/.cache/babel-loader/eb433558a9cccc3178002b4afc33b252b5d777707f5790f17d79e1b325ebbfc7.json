{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css'; // Ensure this imports your CSS file with canvas styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null); // Temporarily store dropped or selected element\n\n  const handleDrop = event => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const {\n      clientX,\n      clientY\n    } = event;\n    const newElement = {\n      id: Date.now(),\n      // Generate unique ID\n      type: elementType,\n      x: clientX,\n      y: clientY,\n      text: 'Label',\n      // Default text\n      fontSize: '16px',\n      // Default font size\n      fontWeight: 'normal' // Default font weight\n    };\n    setTempElement(newElement); // Store temporarily\n    setModalOpen(true); // Open modal for configuration\n  };\n  const handleSaveChanges = config => {\n    const updatedElement = {\n      ...tempElement,\n      ...config\n    };\n    const updatedElements = elements.map(el => el.id === tempElement.id ? updatedElement : el);\n    setElements(updatedElements); // Update elements with modified element\n    setModalOpen(false); // Close modal\n    setTempElement(null); // Clear temporary element\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    onDragOver: e => e.preventDefault(),\n    onDrop: handleDrop,\n    children: [elements.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element\",\n      style: {\n        left: el.x,\n        top: el.y,\n        fontSize: el.fontSize,\n        fontWeight: el.fontWeight\n      },\n      draggable: true,\n      onDragStart: event => {\n        event.dataTransfer.setData('text/plain', el.type);\n        event.dataTransfer.setDragImage(new Image(), 0, 0); // Clear drag image\n        event.currentTarget.style.cursor = 'grabbing'; // Change cursor to grabbing on drag start\n      },\n      onClick: () => {\n        setTempElement(el);\n        setModalOpen(true);\n      },\n      children: el.text\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      element: tempElement,\n      onSaveChanges: handleSaveChanges,\n      onClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"IkLhDJamgE0SE8Ghn3gcu6yvnLk=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Canvas","_s","elements","setElements","modalOpen","setModalOpen","tempElement","setTempElement","handleDrop","event","preventDefault","elementType","dataTransfer","getData","clientX","clientY","newElement","id","Date","now","type","x","y","text","fontSize","fontWeight","handleSaveChanges","config","updatedElement","updatedElements","map","el","className","onDragOver","e","onDrop","children","style","left","top","draggable","onDragStart","setData","setDragImage","Image","currentTarget","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","element","onSaveChanges","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/Canvas.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css'; // Ensure this imports your CSS file with canvas styles\n\nfunction Canvas() {\n  const [elements, setElements] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null); // Temporarily store dropped or selected element\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const { clientX, clientY } = event;\n\n    const newElement = {\n      id: Date.now(), // Generate unique ID\n      type: elementType,\n      x: clientX,\n      y: clientY,\n      text: 'Label', // Default text\n      fontSize: '16px', // Default font size\n      fontWeight: 'normal' // Default font weight\n    };\n\n    setTempElement(newElement); // Store temporarily\n    setModalOpen(true); // Open modal for configuration\n  };\n\n  const handleSaveChanges = (config) => {\n    const updatedElement = {\n      ...tempElement,\n      ...config\n    };\n\n    const updatedElements = elements.map((el) =>\n      el.id === tempElement.id ? updatedElement : el\n    );\n\n    setElements(updatedElements); // Update elements with modified element\n    setModalOpen(false); // Close modal\n    setTempElement(null); // Clear temporary element\n  };\n\n  return (\n    <div className='canvas' onDragOver={(e) => e.preventDefault()} onDrop={handleDrop}>\n      {/* Render dropped elements */}\n      {elements.map((el) => (\n        <div\n          key={el.id}\n          className='element'\n          style={{ left: el.x, top: el.y, fontSize: el.fontSize, fontWeight: el.fontWeight }}\n          draggable={true}\n          onDragStart={(event) => {\n            event.dataTransfer.setData('text/plain', el.type);\n            event.dataTransfer.setDragImage(new Image(), 0, 0); // Clear drag image\n            event.currentTarget.style.cursor = 'grabbing'; // Change cursor to grabbing on drag start\n          }}\n          onClick={() => {\n            setTempElement(el);\n            setModalOpen(true);\n          }}\n        >\n          {el.text}\n        </div>\n      ))}\n\n      {/* Modal for configuration */}\n      {modalOpen && (\n        <Modal\n          element={tempElement}\n          onSaveChanges={handleSaveChanges}\n          onClose={() => setModalOpen(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}