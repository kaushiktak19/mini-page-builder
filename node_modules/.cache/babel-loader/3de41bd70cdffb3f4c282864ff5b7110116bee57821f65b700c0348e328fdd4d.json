{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css'; // CSS file for specific canvas styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null); // Temporarily store the element being configured\n\n  const handleDrop = event => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const {\n      clientX,\n      clientY\n    } = event;\n\n    // If an element is being moved, update its position\n    if (tempElement && !modalOpen) {\n      const updatedElements = elements.map(el => el.id === tempElement.id ? {\n        ...el,\n        x: clientX,\n        y: clientY\n      } : el);\n      setElements(updatedElements);\n      setTempElement(null); // Clear the temporary element\n    } else {\n      // New element is being dropped\n      const newElement = {\n        id: Date.now(),\n        // Unique ID for new elements\n        type: elementType,\n        x: clientX,\n        y: clientY,\n        text: 'Label',\n        // Default text\n        fontSize: '16px',\n        // Default font size\n        fontWeight: 'normal' // Default font weight\n      };\n      setTempElement(newElement); // Store temporarily\n      setModalOpen(true); // Open modal for configuration\n    }\n  };\n  const handleSaveChanges = config => {\n    const updatedElement = {\n      ...tempElement,\n      ...config\n    };\n    setElements([...elements, updatedElement]); // Add or update element\n    setModalOpen(false); // Close modal\n    setTempElement(null); // Clear temporary element\n  };\n  const handleDeleteElement = id => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Delete' && tempElement) {\n      handleDeleteElement(tempElement.id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    onDragOver: e => e.preventDefault(),\n    onDrop: handleDrop,\n    onKeyDown: handleKeyDown,\n    tabIndex: \"0\",\n    children: [elements.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element\",\n      style: {\n        left: el.x,\n        top: el.y\n      },\n      draggable: true,\n      onDragStart: event => {\n        event.dataTransfer.setData('text/plain', 'Label');\n        setTempElement(el); // Track the element being dragged\n      },\n      onDragEnd: () => {\n        setTempElement(null); // Clear the temporary element after dragging\n      },\n      children: el.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      element: tempElement,\n      onSaveChanges: handleSaveChanges,\n      onClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"IkLhDJamgE0SE8Ghn3gcu6yvnLk=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Canvas","_s","elements","setElements","modalOpen","setModalOpen","tempElement","setTempElement","handleDrop","event","preventDefault","elementType","dataTransfer","getData","clientX","clientY","updatedElements","map","el","id","x","y","newElement","Date","now","type","text","fontSize","fontWeight","handleSaveChanges","config","updatedElement","handleDeleteElement","filter","handleKeyDown","key","className","onDragOver","e","onDrop","onKeyDown","tabIndex","children","index","style","left","top","draggable","onDragStart","setData","onDragEnd","fileName","_jsxFileName","lineNumber","columnNumber","element","onSaveChanges","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/Canvas.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css'; // CSS file for specific canvas styles\n\nfunction Canvas() {\n  const [elements, setElements] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null); // Temporarily store the element being configured\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const { clientX, clientY } = event;\n\n    // If an element is being moved, update its position\n    if (tempElement && !modalOpen) {\n      const updatedElements = elements.map(el =>\n        el.id === tempElement.id ? { ...el, x: clientX, y: clientY } : el\n      );\n      setElements(updatedElements);\n      setTempElement(null); // Clear the temporary element\n    } else {\n      // New element is being dropped\n      const newElement = {\n        id: Date.now(), // Unique ID for new elements\n        type: elementType,\n        x: clientX,\n        y: clientY,\n        text: 'Label', // Default text\n        fontSize: '16px', // Default font size\n        fontWeight: 'normal' // Default font weight\n      };\n\n      setTempElement(newElement); // Store temporarily\n      setModalOpen(true); // Open modal for configuration\n    }\n  };\n\n  const handleSaveChanges = (config) => {\n    const updatedElement = {\n      ...tempElement,\n      ...config\n    };\n\n    setElements([...elements, updatedElement]); // Add or update element\n    setModalOpen(false); // Close modal\n    setTempElement(null); // Clear temporary element\n  };\n\n  const handleDeleteElement = (id) => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Delete' && tempElement) {\n      handleDeleteElement(tempElement.id);\n    }\n  };\n\n  return (\n    <div className='canvas' onDragOver={(e) => e.preventDefault()} onDrop={handleDrop} onKeyDown={handleKeyDown} tabIndex=\"0\">\n      {/* Render dropped elements */}\n      {elements.map((el, index) => (\n        <div\n          key={index}\n          className='element'\n          style={{ left: el.x, top: el.y }}\n          draggable={true}\n          onDragStart={(event) => {\n            event.dataTransfer.setData('text/plain', 'Label');\n            setTempElement(el); // Track the element being dragged\n          }}\n          onDragEnd={() => {\n            setTempElement(null); // Clear the temporary element after dragging\n          }}\n        >\n          {el.text}\n        </div>\n      ))}\n\n      {/* Modal for configuration */}\n      {modalOpen && (\n        <Modal\n          element={tempElement}\n          onSaveChanges={handleSaveChanges}\n          onClose={() => setModalOpen(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}