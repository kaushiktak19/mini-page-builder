{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (selectedElement) {\n        if (event.key === 'Enter') {\n          setTempElement(selectedElement);\n          setModalOpen(true);\n        } else if (event.key === 'Delete' || event.key === 'Backspace') {\n          handleDeleteElement(selectedElement.id);\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedElement]);\n  const handleDrop = event => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const {\n      clientX,\n      clientY\n    } = event;\n    const canvasRect = event.currentTarget.getBoundingClientRect();\n    const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - 50); // Adjust for element width\n    const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - 20); // Adjust for element height\n\n    if (draggingElement) {\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: false\n      } : el);\n      setElements(updatedElements);\n      setDraggingElement(null);\n    } else {\n      const newElement = {\n        id: Date.now(),\n        type: elementType,\n        x,\n        y,\n        text: 'Label',\n        fontSize: '16px',\n        fontWeight: 'normal'\n      };\n      setTempElement(newElement);\n      setModalOpen(true);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    if (draggingElement) {\n      const {\n        clientX,\n        clientY\n      } = event;\n      const canvasRect = event.currentTarget.getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - 50); // Adjust for element width\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - 20); // Adjust for element height\n\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: true\n      } : el);\n      setElements(updatedElements);\n    }\n  };\n  const handleSaveChanges = config => {\n    const updatedElements = elements.map(el => el.id === tempElement.id ? {\n      ...el,\n      ...config\n    } : el);\n    if (!elements.some(el => el.id === tempElement.id)) {\n      setElements([...elements, {\n        ...tempElement,\n        ...config\n      }]);\n    } else {\n      setElements(updatedElements);\n    }\n    setModalOpen(false);\n    setTempElement(null);\n  };\n  const handleDeleteElement = id => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n    setSelectedElement(null);\n  };\n  const handleElementClick = (el, event) => {\n    event.stopPropagation();\n    setSelectedElement(el);\n  };\n  const handleCanvasClick = () => {\n    setSelectedElement(null);\n  };\n  const handleDragStart = (el, event) => {\n    event.dataTransfer.setData('text/plain', 'Label');\n    setDraggingElement(el);\n  };\n  const handleDragEnd = event => {\n    if (draggingElement) {\n      const {\n        clientX,\n        clientY\n      } = event;\n      const canvasRect = event.currentTarget.getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - 50); // Adjust for element width\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - 20); // Adjust for element height\n\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: false\n      } : el);\n      setElements(updatedElements);\n      setDraggingElement(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    onClick: handleCanvasClick,\n    tabIndex: \"0\",\n    children: [elements.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `element ${(selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === el.id || (draggingElement === null || draggingElement === void 0 ? void 0 : draggingElement.id) === el.id ? 'selected' : ''}`,\n      style: {\n        left: el.x,\n        top: el.y,\n        position: 'absolute',\n        cursor: 'grab',\n        opacity: el.isDragging ? 0 : 1,\n        fontSize: el.fontSize,\n        fontWeight: el.fontWeight\n      },\n      draggable: true,\n      onClick: event => handleElementClick(el, event),\n      onDragStart: event => handleDragStart(el, event),\n      onDragEnd: handleDragEnd,\n      children: el.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      element: tempElement,\n      onSaveChanges: handleSaveChanges,\n      onClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"QJK4+5IZqXkKnD5z+bM1yDjk+wg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","Canvas","_s","elements","setElements","modalOpen","setModalOpen","tempElement","setTempElement","selectedElement","setSelectedElement","draggingElement","setDraggingElement","handleKeyDown","event","key","handleDeleteElement","id","window","addEventListener","removeEventListener","handleDrop","preventDefault","elementType","dataTransfer","getData","clientX","clientY","canvasRect","currentTarget","getBoundingClientRect","x","Math","min","max","left","width","y","top","height","updatedElements","map","el","isDragging","newElement","Date","now","type","text","fontSize","fontWeight","handleDragOver","handleSaveChanges","config","some","filter","handleElementClick","stopPropagation","handleCanvasClick","handleDragStart","setData","handleDragEnd","className","onDragOver","onDrop","onClick","tabIndex","children","index","style","position","cursor","opacity","draggable","onDragStart","onDragEnd","fileName","_jsxFileName","lineNumber","columnNumber","element","onSaveChanges","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/Canvas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css';\n\nfunction Canvas() {\n  const [elements, setElements] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (selectedElement) {\n        if (event.key === 'Enter') {\n          setTempElement(selectedElement);\n          setModalOpen(true);\n        } else if (event.key === 'Delete' || event.key === 'Backspace') {\n          handleDeleteElement(selectedElement.id);\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedElement]);\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const { clientX, clientY } = event;\n\n    const canvasRect = event.currentTarget.getBoundingClientRect();\n    const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - 50); // Adjust for element width\n    const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - 20); // Adjust for element height\n\n    if (draggingElement) {\n      const updatedElements = elements.map(el =>\n        el.id === draggingElement.id ? { ...el, x, y, isDragging: false } : el\n      );\n      setElements(updatedElements);\n      setDraggingElement(null);\n    } else {\n      const newElement = {\n        id: Date.now(),\n        type: elementType,\n        x,\n        y,\n        text: 'Label',\n        fontSize: '16px',\n        fontWeight: 'normal'\n      };\n\n      setTempElement(newElement);\n      setModalOpen(true);\n    }\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    if (draggingElement) {\n      const { clientX, clientY } = event;\n      const canvasRect = event.currentTarget.getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - 50); // Adjust for element width\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - 20); // Adjust for element height\n\n      const updatedElements = elements.map(el =>\n        el.id === draggingElement.id ? { ...el, x, y, isDragging: true } : el\n      );\n      setElements(updatedElements);\n    }\n  };\n\n  const handleSaveChanges = (config) => {\n    const updatedElements = elements.map(el =>\n      el.id === tempElement.id ? { ...el, ...config } : el\n    );\n\n    if (!elements.some(el => el.id === tempElement.id)) {\n      setElements([...elements, { ...tempElement, ...config }]);\n    } else {\n      setElements(updatedElements);\n    }\n\n    setModalOpen(false);\n    setTempElement(null);\n  };\n\n  const handleDeleteElement = (id) => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n    setSelectedElement(null);\n  };\n\n  const handleElementClick = (el, event) => {\n    event.stopPropagation();\n    setSelectedElement(el);\n  };\n\n  const handleCanvasClick = () => {\n    setSelectedElement(null);\n  };\n\n  const handleDragStart = (el, event) => {\n    event.dataTransfer.setData('text/plain', 'Label');\n    setDraggingElement(el);\n  };\n\n  const handleDragEnd = (event) => {\n    if (draggingElement) {\n      const { clientX, clientY } = event;\n      const canvasRect = event.currentTarget.getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - 50); // Adjust for element width\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - 20); // Adjust for element height\n\n      const updatedElements = elements.map(el =>\n        el.id === draggingElement.id ? { ...el, x, y, isDragging: false } : el\n      );\n      setElements(updatedElements);\n      setDraggingElement(null);\n    }\n  };\n\n  return (\n    <div\n      className='canvas'\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n      onClick={handleCanvasClick}\n      tabIndex=\"0\"\n    >\n      {elements.map((el, index) => (\n        <div\n          key={index}\n          className={`element ${selectedElement?.id === el.id || draggingElement?.id === el.id ? 'selected' : ''}`}\n          style={{ \n            left: el.x, \n            top: el.y, \n            position: 'absolute',\n            cursor: 'grab',\n            opacity: el.isDragging ? 0 : 1,\n            fontSize: el.fontSize,\n            fontWeight: el.fontWeight\n          }}\n          draggable={true}\n          onClick={(event) => handleElementClick(el, event)}\n          onDragStart={(event) => handleDragStart(el, event)}\n          onDragEnd={handleDragEnd}\n        >\n          {el.text}\n        </div>\n      ))}\n\n      {modalOpen && (\n        <Modal\n          element={tempElement}\n          onSaveChanges={handleSaveChanges}\n          onClose={() => setModalOpen(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}