{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const [elements, setElements] = useState(() => {\n    const savedElements = localStorage.getItem('canvasElements');\n    return savedElements ? JSON.parse(savedElements) : [];\n  });\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('canvasElements', JSON.stringify(elements));\n  }, [elements]);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (selectedElement) {\n        if (event.key === 'Enter') {\n          setTempElement(selectedElement);\n          setModalOpen(true);\n        } else if (event.key === 'Delete' || event.key === 'Backspace') {\n          handleDeleteElement(selectedElement.id);\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedElement]);\n  const handleDrop = event => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const {\n      clientX,\n      clientY\n    } = event;\n    const canvasRect = event.currentTarget.getBoundingClientRect();\n    if (draggingElement) {\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: false\n      } : el);\n      setElements(updatedElements);\n      setDraggingElement(null);\n    } else {\n      let newElement = null;\n      switch (elementType) {\n        case 'label':\n          newElement = {\n            id: Date.now(),\n            type: elementType,\n            x: clientX - canvasRect.left,\n            y: clientY - canvasRect.top,\n            text: 'Label',\n            fontSize: '16px',\n            fontWeight: 'normal',\n            style: {\n              position: 'absolute',\n              width: '298px',\n              height: '49px',\n              left: `${clientX - canvasRect.left}px`,\n              top: `${clientY - canvasRect.top}px`\n            }\n          };\n          break;\n        case 'input':\n          newElement = {\n            id: Date.now(),\n            type: elementType,\n            x: clientX - canvasRect.left,\n            y: clientY - canvasRect.top,\n            text: 'Input',\n            style: {\n              position: 'absolute',\n              width: '298px',\n              height: '49px',\n              left: `${clientX - canvasRect.left}px`,\n              top: `${clientY - canvasRect.top}px`,\n              background: '#FFFFFF',\n              border: '1px solid rgba(0, 0, 0, 0.07)'\n            }\n          };\n          break;\n        case 'button':\n          newElement = {\n            id: Date.now(),\n            type: elementType,\n            x: clientX - canvasRect.left,\n            y: clientY - canvasRect.top,\n            text: 'Button',\n            style: {\n              position: 'absolute',\n              width: '77px',\n              height: '49px',\n              left: `${clientX - canvasRect.left}px`,\n              top: `${clientY - canvasRect.top}px`,\n              background: '#0044C1'\n            }\n          };\n          break;\n        default:\n          break;\n      }\n      if (newElement) {\n        setTempElement(newElement);\n        setModalOpen(true);\n      }\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    if (draggingElement) {\n      const {\n        clientX,\n        clientY\n      } = event;\n      const canvasRect = event.currentTarget.getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: true\n      } : el);\n      setElements(updatedElements);\n    }\n  };\n  const handleSaveChanges = config => {\n    const updatedElements = elements.map(el => el.id === tempElement.id ? {\n      ...el,\n      ...config\n    } : el);\n    if (!elements.some(el => el.id === tempElement.id)) {\n      setElements([...elements, {\n        ...tempElement,\n        ...config\n      }]);\n    } else {\n      setElements(updatedElements);\n    }\n    setModalOpen(false);\n    setTempElement(null);\n  };\n  const handleDeleteElement = id => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n    setSelectedElement(null);\n  };\n  const handleElementClick = (el, event) => {\n    event.stopPropagation();\n    setSelectedElement(el);\n  };\n  const handleCanvasClick = () => {\n    setSelectedElement(null);\n  };\n  const handleDragStart = (el, event) => {\n    event.dataTransfer.setData('text/plain', el.type);\n    setDraggingElement(el);\n  };\n  const handleDragEnd = event => {\n    if (draggingElement) {\n      const {\n        clientX,\n        clientY\n      } = event;\n      const canvasRect = document.querySelector('.canvas').getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: false\n      } : el);\n      setElements(updatedElements);\n      setDraggingElement(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    onClick: handleCanvasClick,\n    tabIndex: \"0\",\n    children: [elements.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: el.id,\n      className: `element ${(selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === el.id || (draggingElement === null || draggingElement === void 0 ? void 0 : draggingElement.id) === el.id ? 'selected' : ''}`,\n      style: {\n        left: el.x,\n        top: el.y,\n        position: 'absolute',\n        cursor: 'grab',\n        opacity: el.isDragging ? 0 : 1,\n        fontSize: el.fontSize,\n        fontWeight: el.fontWeight\n      },\n      draggable: true,\n      onClick: event => handleElementClick(el, event),\n      onDragStart: event => handleDragStart(el, event),\n      onDragEnd: handleDragEnd,\n      children: el.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }, this)), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      element: tempElement,\n      onSaveChanges: handleSaveChanges,\n      onClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 7\n  }, this);\n}\n_s(Canvas, \"FxSJfRJd2KxLZSK49rj1BMZ7XCo=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","Canvas","_s","elements","setElements","savedElements","localStorage","getItem","JSON","parse","modalOpen","setModalOpen","tempElement","setTempElement","selectedElement","setSelectedElement","draggingElement","setDraggingElement","setItem","stringify","handleKeyDown","event","key","handleDeleteElement","id","window","addEventListener","removeEventListener","handleDrop","preventDefault","elementType","dataTransfer","getData","clientX","clientY","canvasRect","currentTarget","getBoundingClientRect","elementRect","document","getElementById","x","Math","min","max","left","width","y","top","height","updatedElements","map","el","isDragging","newElement","Date","now","type","text","fontSize","fontWeight","style","position","background","border","handleDragOver","handleSaveChanges","config","some","filter","handleElementClick","stopPropagation","handleCanvasClick","handleDragStart","setData","handleDragEnd","querySelector","className","onDragOver","onDrop","onClick","tabIndex","children","index","cursor","opacity","draggable","onDragStart","onDragEnd","fileName","_jsxFileName","lineNumber","columnNumber","element","onSaveChanges","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/Canvas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css';\n\nfunction Canvas() {\n  const [elements, setElements] = useState(() => {\n    const savedElements = localStorage.getItem('canvasElements');\n    return savedElements ? JSON.parse(savedElements) : [];\n  });\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('canvasElements', JSON.stringify(elements));\n  }, [elements]);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (selectedElement) {\n        if (event.key === 'Enter') {\n            setTempElement(selectedElement);\n            setModalOpen(true);\n          } else if (event.key === 'Delete' || event.key === 'Backspace') {\n            handleDeleteElement(selectedElement.id);\n          }\n        }\n      };\n  \n      window.addEventListener('keydown', handleKeyDown);\n  \n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }, [selectedElement]);\n  \n    const handleDrop = (event) => {\n        event.preventDefault();\n        const elementType = event.dataTransfer.getData('text/plain');\n        const { clientX, clientY } = event;\n      \n        const canvasRect = event.currentTarget.getBoundingClientRect();\n      \n        if (draggingElement) {\n          const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n          const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n          const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      \n          const updatedElements = elements.map(el =>\n            el.id === draggingElement.id ? { ...el, x, y, isDragging: false } : el\n          );\n          setElements(updatedElements);\n          setDraggingElement(null);\n        } else {\n          let newElement = null;\n          switch (elementType) {\n            case 'label':\n              newElement = {\n                id: Date.now(),\n                type: elementType,\n                x: clientX - canvasRect.left,\n                y: clientY - canvasRect.top,\n                text: 'Label',\n                fontSize: '16px',\n                fontWeight: 'normal',\n                style: {\n                  position: 'absolute',\n                  width: '298px',\n                  height: '49px',\n                  left: `${clientX - canvasRect.left}px`,\n                  top: `${clientY - canvasRect.top}px`,\n                }\n              };\n              break;\n            case 'input':\n              newElement = {\n                id: Date.now(),\n                type: elementType,\n                x: clientX - canvasRect.left,\n                y: clientY - canvasRect.top,\n                text: 'Input',\n                style: {\n                  position: 'absolute',\n                  width: '298px',\n                  height: '49px',\n                  left: `${clientX - canvasRect.left}px`,\n                  top: `${clientY - canvasRect.top}px`,\n                  background: '#FFFFFF',\n                  border: '1px solid rgba(0, 0, 0, 0.07)',\n                }\n              };\n              break;\n            case 'button':\n              newElement = {\n                id: Date.now(),\n                type: elementType,\n                x: clientX - canvasRect.left,\n                y: clientY - canvasRect.top,\n                text: 'Button',\n                style: {\n                  position: 'absolute',\n                  width: '77px',\n                  height: '49px',\n                  left: `${clientX - canvasRect.left}px`,\n                  top: `${clientY - canvasRect.top}px`,\n                  background: '#0044C1',\n                }\n              };\n              break;\n            default:\n              break;\n          }\n      \n          if (newElement) {\n            setTempElement(newElement);\n            setModalOpen(true);\n          }\n        }\n      };\n      \n  \n    const handleDragOver = (event) => {\n      event.preventDefault();\n      if (draggingElement) {\n        const { clientX, clientY } = event;\n        const canvasRect = event.currentTarget.getBoundingClientRect();\n        const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n        const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n        const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n  \n        const updatedElements = elements.map(el =>\n          el.id === draggingElement.id ? { ...el, x, y, isDragging: true } : el\n        );\n        setElements(updatedElements);\n      }\n    };\n  \n    const handleSaveChanges = (config) => {\n      const updatedElements = elements.map(el =>\n        el.id === tempElement.id ? { ...el, ...config } : el\n      );\n  \n      if (!elements.some(el => el.id === tempElement.id)) {\n        setElements([...elements, { ...tempElement, ...config }]);\n      } else {\n        setElements(updatedElements);\n      }\n  \n      setModalOpen(false);\n      setTempElement(null);\n    };\n  \n    const handleDeleteElement = (id) => {\n      const updatedElements = elements.filter(el => el.id !== id);\n      setElements(updatedElements);\n      setSelectedElement(null);\n    };\n  \n    const handleElementClick = (el, event) => {\n      event.stopPropagation();\n      setSelectedElement(el);\n    };\n  \n    const handleCanvasClick = () => {\n      setSelectedElement(null);\n    };\n  \n    const handleDragStart = (el, event) => {\n      event.dataTransfer.setData('text/plain', el.type);\n      setDraggingElement(el);\n    };\n  \n    const handleDragEnd = (event) => {\n      if (draggingElement) {\n        const { clientX, clientY } = event;\n        const canvasRect = document.querySelector('.canvas').getBoundingClientRect();\n        const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n        const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n        const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n  \n        const updatedElements = elements.map(el =>\n          el.id === draggingElement.id ? { ...el, x, y, isDragging: false } : el\n        );\n        setElements(updatedElements);\n        setDraggingElement(null);\n      }\n    };\n  \n    return (\n      <div\n        className='canvas'\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n        onClick={handleCanvasClick}\n        tabIndex=\"0\"\n      >\n        {elements.map((el, index) => (\n          <div\n            id={el.id}\n            key={index}\n            className={`element ${selectedElement?.id === el.id || draggingElement?.id === el.id ? 'selected' : ''}`}\n            style={{ \n              left: el.x, \n              top: el.y, \n              position: 'absolute',\n              cursor: 'grab',\n              opacity: el.isDragging ? 0 : 1,\n              fontSize: el.fontSize,\n              fontWeight: el.fontWeight\n            }}\n            draggable={true}\n            onClick={(event) => handleElementClick(el, event)}\n            onDragStart={(event) => handleDragStart(el, event)}\n            onDragEnd={handleDragEnd}\n          >\n            {el.text}\n          </div>\n        ))}\n  \n        {modalOpen && (\n          <Modal\n            element={tempElement}\n            onSaveChanges={handleSaveChanges}\n            onClose={() => setModalOpen(false)}\n          />\n        )}\n      </div>\n    );\n  }\n  \n  export default Canvas;\n  \n         \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}