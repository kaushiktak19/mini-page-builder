{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\components\\\\Board\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Label, Input, Button } from '../Elements';\nimport ElementWrapper from '../ElementWrapper/ElementWrapper';\nimport Modal from '../Modal/Modal';\nimport './board.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [boardElements, setBoardElements] = useState([]);\n  const boardRef = useRef(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [initialElement, setInitialElement] = useState(null);\n  useEffect(() => {\n    const boardElementsInLocalStorage = localStorage.getItem('boardElements');\n    if (boardElementsInLocalStorage) {\n      setBoardElements(JSON.parse(boardElementsInLocalStorage));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('boardElements', JSON.stringify(boardElements));\n  }, [boardElements]);\n  const handleOnDragOver = e => {\n    e.preventDefault();\n  };\n  const handleOnDrop = e => {\n    e.preventDefault();\n    const elementType = e.dataTransfer.getData('elementType');\n    const x = e.clientX - boardRef.current.getBoundingClientRect().left;\n    const y = e.clientY - boardRef.current.getBoundingClientRect().top;\n    setInitialElement({\n      id: uuidv4(),\n      elementType,\n      config: {\n        text: elementType,\n        x,\n        y,\n        fontSize: '',\n        fontWeight: ''\n      }\n    });\n    setModalOpen(true);\n  };\n  const handleBoardOnClick = e => {\n    if (e.target === boardRef.current) {\n      setSelectedElement(null);\n    }\n  };\n  const addBoardElement = newElement => {\n    setBoardElements([...boardElements, newElement]);\n  };\n  const deleteBoardElement = elementID => {\n    setBoardElements(boardElements.filter(element => element.id !== elementID));\n  };\n  const updateBoardElement = (elementID, elementConfig) => {\n    setBoardElements(boardElements.map(element => {\n      if (element.id === elementID) {\n        return {\n          ...element,\n          config: elementConfig\n        };\n      }\n      return element;\n    }));\n  };\n  const getElementJSX = element => {\n    const style = {\n      fontSize: `${element.config.fontSize}px`,\n      fontWeight: parseInt(`${element.config.fontWeight}`, 10) || 400\n    };\n    switch (element.elementType) {\n      case 'Label':\n        return /*#__PURE__*/_jsxDEV(Label, {\n          text: element.config.text,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this);\n      case 'Input':\n        return /*#__PURE__*/_jsxDEV(Input, {\n          text: element.config.text,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this);\n      case 'Button':\n        return /*#__PURE__*/_jsxDEV(Button, {\n          text: element.config.text,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const handleOnKeyDown = e => {\n    if (selectedElement) {\n      if (e.key === 'Enter') {\n        setModalOpen(true);\n      } else if (e.key === 'Delete') {\n        deleteBoardElement(selectedElement.id);\n      }\n    }\n  };\n  const onElementSave = (elementID, elementConfig) => {\n    updateBoardElement(elementID, elementConfig);\n    setModalOpen(false);\n    setSelectedElement(null);\n  };\n  const onNewElementSave = elementConfig => {\n    if (initialElement) {\n      const newElement = {\n        id: initialElement.id,\n        elementType: initialElement.elementType,\n        config: {\n          text: elementConfig.text,\n          x: elementConfig.x,\n          y: elementConfig.y,\n          fontSize: elementConfig.fontSize || '',\n          fontWeight: elementConfig.fontWeight || ''\n        }\n      };\n      addBoardElement(newElement);\n      setInitialElement(null);\n    }\n    setModalOpen(false);\n  };\n  const onModalClose = () => {\n    setModalOpen(false);\n    setInitialElement(null);\n    setSelectedElement(null);\n  };\n  const handleDragStart = (e, elementType) => {\n    e.dataTransfer.setData('elementType', elementType);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: boardRef,\n      className: \"Board\",\n      onDragOver: handleOnDragOver,\n      onDrop: handleOnDrop,\n      onClick: handleBoardOnClick,\n      onKeyDown: handleOnKeyDown,\n      role: \"button\",\n      tabIndex: -1,\n      children: boardElements.map(element => {\n        return /*#__PURE__*/_jsxDEV(ElementWrapper, {\n          element: element,\n          updateBoardElement: updateBoardElement,\n          setSelectedElement: setSelectedElement,\n          selectedElement: selectedElement,\n          children: getElementJSX(element)\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragStart: e => handleDragStart(e, 'Label'),\n        style: {\n          cursor: 'grab'\n        },\n        children: \"Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragStart: e => handleDragStart(e, 'Input'),\n        style: {\n          cursor: 'grab'\n        },\n        children: \"Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragStart: e => handleDragStart(e, 'Button'),\n        style: {\n          cursor: 'grab'\n        },\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      selectedElement: selectedElement,\n      initialElement: initialElement,\n      closeModal: onModalClose,\n      onElementSave: onElementSave,\n      onNewElementSave: onNewElementSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Board, \"ntwHZY3PchgUofGjdYakl++zbW0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useRef","useEffect","v4","uuidv4","Label","Input","Button","ElementWrapper","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","boardElements","setBoardElements","boardRef","modalOpen","setModalOpen","selectedElement","setSelectedElement","initialElement","setInitialElement","boardElementsInLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","handleOnDragOver","e","preventDefault","handleOnDrop","elementType","dataTransfer","getData","x","clientX","current","getBoundingClientRect","left","y","clientY","top","id","config","text","fontSize","fontWeight","handleBoardOnClick","target","addBoardElement","newElement","deleteBoardElement","elementID","filter","element","updateBoardElement","elementConfig","map","getElementJSX","style","parseInt","fileName","_jsxFileName","lineNumber","columnNumber","handleOnKeyDown","key","onElementSave","onNewElementSave","onModalClose","handleDragStart","setData","children","ref","className","onDragOver","onDrop","onClick","onKeyDown","role","tabIndex","draggable","onDragStart","cursor","open","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/components/Board/Board.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Label, Input, Button } from '../Elements';\nimport ElementWrapper from '../ElementWrapper/ElementWrapper';\nimport Modal from '../Modal/Modal';\nimport './board.css';\n\nconst Board = () => {\n  const [boardElements, setBoardElements] = useState([]);\n  const boardRef = useRef(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [initialElement, setInitialElement] = useState(null);\n\n  useEffect(() => {\n    const boardElementsInLocalStorage = localStorage.getItem('boardElements');\n    if (boardElementsInLocalStorage) {\n      setBoardElements(JSON.parse(boardElementsInLocalStorage));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('boardElements', JSON.stringify(boardElements));\n  }, [boardElements]);\n\n  const handleOnDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleOnDrop = (e) => {\n    e.preventDefault();\n    const elementType = e.dataTransfer.getData('elementType');\n    const x = e.clientX - boardRef.current.getBoundingClientRect().left;\n    const y = e.clientY - boardRef.current.getBoundingClientRect().top;\n\n    setInitialElement({\n      id: uuidv4(),\n      elementType,\n      config: {\n        text: elementType,\n        x,\n        y,\n        fontSize: '',\n        fontWeight: '',\n      },\n    });\n    setModalOpen(true);\n  };\n\n  const handleBoardOnClick = (e) => {\n    if (e.target === boardRef.current) {\n      setSelectedElement(null);\n    }\n  };\n\n  const addBoardElement = (newElement) => {\n    setBoardElements([...boardElements, newElement]);\n  };\n\n  const deleteBoardElement = (elementID) => {\n    setBoardElements(boardElements.filter((element) => element.id !== elementID));\n  };\n\n  const updateBoardElement = (elementID, elementConfig) => {\n    setBoardElements(\n      boardElements.map((element) => {\n        if (element.id === elementID) {\n          return { ...element, config: elementConfig };\n        }\n        return element;\n      })\n    );\n  };\n\n  const getElementJSX = (element) => {\n    const style = {\n      fontSize: `${element.config.fontSize}px`,\n      fontWeight: parseInt(`${element.config.fontWeight}`, 10) || 400,\n    };\n\n    switch (element.elementType) {\n      case 'Label':\n        return <Label text={element.config.text} style={style} />;\n      case 'Input':\n        return <Input text={element.config.text} style={style} />;\n      case 'Button':\n        return <Button text={element.config.text} style={style} />;\n      default:\n        return null;\n    }\n  };\n\n  const handleOnKeyDown = (e) => {\n    if (selectedElement) {\n      if (e.key === 'Enter') {\n        setModalOpen(true);\n      } else if (e.key === 'Delete') {\n        deleteBoardElement(selectedElement.id);\n      }\n    }\n  };\n\n  const onElementSave = (elementID, elementConfig) => {\n    updateBoardElement(elementID, elementConfig);\n    setModalOpen(false);\n    setSelectedElement(null);\n  };\n\n  const onNewElementSave = (elementConfig) => {\n    if (initialElement) {\n      const newElement = {\n        id: initialElement.id,\n        elementType: initialElement.elementType,\n        config: {\n          text: elementConfig.text,\n          x: elementConfig.x,\n          y: elementConfig.y,\n          fontSize: elementConfig.fontSize || '',\n          fontWeight: elementConfig.fontWeight || '',\n        },\n      };\n      addBoardElement(newElement);\n      setInitialElement(null);\n    }\n    setModalOpen(false);\n  };\n\n  const onModalClose = () => {\n    setModalOpen(false);\n    setInitialElement(null);\n    setSelectedElement(null);\n  };\n\n  const handleDragStart = (e, elementType) => {\n    e.dataTransfer.setData('elementType', elementType);\n  };\n\n  return (\n    <>\n      <div\n        ref={boardRef}\n        className=\"Board\"\n        onDragOver={handleOnDragOver}\n        onDrop={handleOnDrop}\n        onClick={handleBoardOnClick}\n        onKeyDown={handleOnKeyDown}\n        role=\"button\"\n        tabIndex={-1}\n      >\n        {boardElements.map((element) => {\n          return (\n            <ElementWrapper\n              key={element.id}\n              element={element}\n              updateBoardElement={updateBoardElement}\n              setSelectedElement={setSelectedElement}\n              selectedElement={selectedElement}\n            >\n              {getElementJSX(element)}\n            </ElementWrapper>\n          );\n        })}\n      </div>\n      <div>\n        <div\n          draggable\n          onDragStart={(e) => handleDragStart(e, 'Label')}\n          style={{ cursor: 'grab' }}\n        >\n          Label\n        </div>\n        <div\n          draggable\n          onDragStart={(e) => handleDragStart(e, 'Input')}\n          style={{ cursor: 'grab' }}\n        >\n          Input\n        </div>\n        <div\n          draggable\n          onDragStart={(e) => handleDragStart(e, 'Button')}\n          style={{ cursor: 'grab' }}\n        >\n          Button\n        </div>\n      </div>\n      <Modal\n        open={modalOpen}\n        selectedElement={selectedElement}\n        initialElement={initialElement}\n        closeModal={onModalClose}\n        onElementSave={onElementSave}\n        onNewElementSave={onNewElementSave}\n      />\n    </>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}