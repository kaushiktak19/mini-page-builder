{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas({\n  elements,\n  setElements\n}) {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (selectedElement) {\n        if (event.key === 'Enter') {\n          setTempElement(selectedElement);\n          setModalOpen(true);\n        } else if (event.key === 'Delete') {\n          handleDeleteElement(selectedElement.id);\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedElement]);\n  const handleDrop = event => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const {\n      clientX,\n      clientY\n    } = event;\n    const canvasRect = event.currentTarget.getBoundingClientRect();\n    if (draggingElement) {\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: false\n      } : el);\n      setElements(updatedElements);\n      setDraggingElement(null);\n    } else {\n      const newElement = {\n        id: Date.now(),\n        type: elementType,\n        x: clientX - canvasRect.left,\n        y: clientY - canvasRect.top,\n        text: elementType === 'label' ? 'This is Label' : elementType === 'input' ? ' ' : 'Button',\n        fontSize: '16px',\n        fontWeight: 'normal'\n      };\n      setTempElement(newElement);\n      setModalOpen(true);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    if (draggingElement) {\n      const {\n        clientX,\n        clientY\n      } = event;\n      const canvasRect = event.currentTarget.getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: true\n      } : el);\n      setElements(updatedElements);\n    }\n  };\n  const handleSaveChanges = config => {\n    const updatedElements = elements.map(el => el.id === tempElement.id ? {\n      ...el,\n      ...config\n    } : el);\n    if (!elements.some(el => el.id === tempElement.id)) {\n      setElements([...elements, {\n        ...tempElement,\n        ...config\n      }]);\n    } else {\n      setElements(updatedElements);\n    }\n    setModalOpen(false);\n    setTempElement(null);\n  };\n  const handleDeleteElement = id => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n    setSelectedElement(null);\n  };\n  const handleElementClick = (el, event) => {\n    event.stopPropagation();\n    setSelectedElement(el);\n  };\n  const handleCanvasClick = () => {\n    setSelectedElement(null);\n  };\n  const handleDragStart = (el, event) => {\n    event.dataTransfer.setData('text/plain', el.type);\n    setDraggingElement(el);\n  };\n  const handleDragEnd = event => {\n    if (draggingElement) {\n      const {\n        clientX,\n        clientY\n      } = event;\n      const canvasRect = document.querySelector('.canvas').getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n      const updatedElements = elements.map(el => el.id === draggingElement.id ? {\n        ...el,\n        x,\n        y,\n        isDragging: false\n      } : el);\n      setElements(updatedElements);\n      setDraggingElement(null);\n    }\n  };\n  const handleInputChange = (id, value) => {\n    const updatedElements = elements.map(el => el.id === id ? {\n      ...el,\n      text: value\n    } : el);\n    setElements(updatedElements);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    onClick: handleCanvasClick,\n    tabIndex: \"0\",\n    children: [elements.map((el, index) => {\n      let elementContent;\n      if (el.type === 'label') {\n        elementContent = /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: el.fontSize,\n            fontWeight: el.fontWeight\n          },\n          className: \"label-element\",\n          onClick: e => handleElementClick(el, e),\n          onDragStart: event => handleDragStart(el, event),\n          onDragEnd: handleDragEnd,\n          draggable: true,\n          children: el.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this);\n      } else if (el.type === 'input') {\n        elementContent = /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: el.text,\n          onChange: e => handleInputChange(el.id, e.target.value),\n          style: {\n            fontSize: el.fontSize,\n            fontWeight: el.fontWeight\n          },\n          className: \"input-element\",\n          onClick: e => handleElementClick(el, e),\n          onDragStart: event => handleDragStart(el, event),\n          onDragEnd: handleDragEnd,\n          draggable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this);\n      } else if (el.type === 'button') {\n        elementContent = /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: el.fontSize,\n            fontWeight: el.fontWeight\n          },\n          className: \"button-element\",\n          onClick: e => handleElementClick(el, e),\n          onDragStart: event => handleDragStart(el, event),\n          onDragEnd: handleDragEnd,\n          draggable: true,\n          children: el.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: el.id,\n        className: `element ${(selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === el.id || (draggingElement === null || draggingElement === void 0 ? void 0 : draggingElement.id) === el.id ? 'selected' : ''}`,\n        style: {\n          left: el.x,\n          top: el.y,\n          position: 'absolute',\n          cursor: 'grab',\n          opacity: el.isDragging ? 0 : 1,\n          fontSize: el.fontSize,\n          fontWeight: el.fontWeight\n        },\n        draggable: true,\n        onClick: event => handleElementClick(el, event),\n        onDragStart: event => handleDragStart(el, event),\n        onDragEnd: handleDragEnd,\n        children: elementContent\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this);\n    }), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      element: tempElement,\n      onSaveChanges: handleSaveChanges,\n      onClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"gW/CPm7/sEj0VRN1HVyFqpaXs5o=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","Canvas","elements","setElements","_s","modalOpen","setModalOpen","tempElement","setTempElement","selectedElement","setSelectedElement","draggingElement","setDraggingElement","handleKeyDown","event","key","handleDeleteElement","id","window","addEventListener","removeEventListener","handleDrop","preventDefault","elementType","dataTransfer","getData","clientX","clientY","canvasRect","currentTarget","getBoundingClientRect","elementRect","document","getElementById","x","Math","min","max","left","width","y","top","height","updatedElements","map","el","isDragging","newElement","Date","now","type","text","fontSize","fontWeight","handleDragOver","handleSaveChanges","config","some","filter","handleElementClick","stopPropagation","handleCanvasClick","handleDragStart","setData","handleDragEnd","querySelector","handleInputChange","value","className","onDragOver","onDrop","onClick","tabIndex","children","index","elementContent","style","e","onDragStart","onDragEnd","draggable","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","position","cursor","opacity","element","onSaveChanges","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/Canvas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css';\n\nfunction Canvas({ elements, setElements }) {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempElement, setTempElement] = useState(null);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (selectedElement) {\n        if (event.key === 'Enter') {\n          setTempElement(selectedElement);\n          setModalOpen(true);\n        } else if (event.key === 'Delete') {\n          handleDeleteElement(selectedElement.id);\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [selectedElement]);\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const { clientX, clientY } = event;\n    const canvasRect = event.currentTarget.getBoundingClientRect();\n\n    if (draggingElement) {\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n\n      const updatedElements = elements.map(el =>\n        el.id === draggingElement.id ? { ...el, x, y, isDragging: false } : el\n      );\n      setElements(updatedElements);\n      setDraggingElement(null);\n    } else {\n      const newElement = {\n        id: Date.now(),\n        type: elementType,\n        x: clientX - canvasRect.left,\n        y: clientY - canvasRect.top,\n        text: elementType === 'label' ? 'This is Label' : elementType === 'input' ? ' ' : 'Button', \n        fontSize: '16px',\n        fontWeight: 'normal'\n      };\n\n      setTempElement(newElement);\n      setModalOpen(true);\n    }\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    if (draggingElement) {\n      const { clientX, clientY } = event;\n      const canvasRect = event.currentTarget.getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n\n      const updatedElements = elements.map(el =>\n        el.id === draggingElement.id ? { ...el, x, y, isDragging: true } : el\n      );\n      setElements(updatedElements);\n    }\n  };\n\n  const handleSaveChanges = (config) => {\n    const updatedElements = elements.map(el =>\n      el.id === tempElement.id ? { ...el, ...config } : el\n    );\n\n    if (!elements.some(el => el.id === tempElement.id)) {\n      setElements([...elements, { ...tempElement, ...config }]);\n    } else {\n      setElements(updatedElements);\n    }\n\n    setModalOpen(false);\n    setTempElement(null);\n  };\n\n  const handleDeleteElement = (id) => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n    setSelectedElement(null);\n  };\n\n  const handleElementClick = (el, event) => {\n    event.stopPropagation();\n    setSelectedElement(el);\n  };\n\n  const handleCanvasClick = () => {\n    setSelectedElement(null);\n  };\n\n  const handleDragStart = (el, event) => {\n    event.dataTransfer.setData('text/plain', el.type);\n    setDraggingElement(el);\n  };\n\n  const handleDragEnd = (event) => {\n    if (draggingElement) {\n      const { clientX, clientY } = event;\n      const canvasRect = document.querySelector('.canvas').getBoundingClientRect();\n      const elementRect = document.getElementById(draggingElement.id).getBoundingClientRect();\n      const x = Math.min(Math.max(clientX - canvasRect.left, 0), canvasRect.width - elementRect.width);\n      const y = Math.min(Math.max(clientY - canvasRect.top, 0), canvasRect.height - elementRect.height);\n\n      const updatedElements = elements.map(el =>\n        el.id === draggingElement.id ? { ...el, x, y, isDragging: false } : el\n      );\n      setElements(updatedElements);\n      setDraggingElement(null);\n    }\n  };\n\n  const handleInputChange = (id, value) => {\n    const updatedElements = elements.map(el =>\n      el.id === id ? { ...el, text: value } : el\n    );\n    setElements(updatedElements);\n  };\n\n  return (\n    <div\n      className='canvas'\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n      onClick={handleCanvasClick}\n      tabIndex=\"0\"\n    >\n      {elements.map((el, index) => {\n        let elementContent;\n        if (el.type === 'label') {\n          elementContent = (\n            <span\n              style={{\n                fontSize: el.fontSize,\n                fontWeight: el.fontWeight,\n              }}\n              className=\"label-element\"\n              onClick={(e) => handleElementClick(el, e)}\n              onDragStart={(event) => handleDragStart(el, event)}\n              onDragEnd={handleDragEnd}\n              draggable={true}\n            >\n              {el.text}\n            </span>\n          );\n        } else if (el.type === 'input') {\n          elementContent = (\n            <input\n              type=\"text\"\n              value={el.text} \n              onChange={(e) => handleInputChange(el.id, e.target.value)} \n              style={{\n                fontSize: el.fontSize,\n                fontWeight: el.fontWeight,\n              }}\n              className=\"input-element\"\n              onClick={(e) => handleElementClick(el, e)}\n              onDragStart={(event) => handleDragStart(el, event)}\n              onDragEnd={handleDragEnd}\n              draggable={true}\n            />\n          );\n        } else if (el.type === 'button') {\n          elementContent = (\n            <button\n              style={{\n                fontSize: el.fontSize,\n                fontWeight: el.fontWeight,\n              }}\n              className=\"button-element\"\n              onClick={(e) => handleElementClick(el, e)}\n              onDragStart={(event) => handleDragStart(el, event)}\n              onDragEnd={handleDragEnd}\n              draggable={true}\n            >\n              {el.text}\n            </button>\n          );\n        }\n\n        return (\n          <div\n            id={el.id}\n            key={index}\n            className={`element ${selectedElement?.id === el.id || draggingElement?.id === el.id ? 'selected' : ''}`}\n            style={{ \n              left: el.x, \n              top: el.y, \n              position: 'absolute',\n              cursor: 'grab',\n              opacity: el.isDragging ? 0 : 1,\n              fontSize: el.fontSize,\n              fontWeight: el.fontWeight\n            }}\n            draggable={true}\n            onClick={(event) => handleElementClick(el, event)}\n            onDragStart={(event) => handleDragStart(el, event)}\n            onDragEnd={handleDragEnd}\n          >\n            {elementContent}\n          </div>\n        );\n      })}\n\n      {modalOpen && (\n        <Modal\n          element={tempElement}\n          onSaveChanges={handleSaveChanges}\n          onClose={() => setModalOpen(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}