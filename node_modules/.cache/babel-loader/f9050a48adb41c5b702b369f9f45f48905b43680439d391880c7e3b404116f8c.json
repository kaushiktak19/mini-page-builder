{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css'; // CSS file for specific canvas styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [draggedElement, setDraggedElement] = useState(null); // Track the element being dragged\n\n  const handleDrop = event => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const {\n      clientX,\n      clientY\n    } = event;\n    const newElement = {\n      id: Date.now(),\n      // Unique ID for new elements\n      type: elementType,\n      x: clientX,\n      y: clientY,\n      text: 'Label',\n      // Default text\n      fontSize: '16px',\n      // Default font size\n      fontWeight: 'normal' // Default font weight\n      // Add other default configurations\n    };\n    const existingElement = elements.find(el => el.id === (draggedElement === null || draggedElement === void 0 ? void 0 : draggedElement.id));\n    if (existingElement) {\n      // Move existing element\n      const updatedElements = elements.map(el => el.id === draggedElement.id ? {\n        ...el,\n        x: clientX,\n        y: clientY\n      } : el);\n      setElements(updatedElements);\n    } else {\n      // New element dropped\n      setModalOpen(true); // Open modal for configuration\n      setDraggedElement(newElement); // Track the element being dragged\n    }\n  };\n  const handleSaveChanges = config => {\n    const updatedElement = {\n      ...draggedElement,\n      ...config\n    };\n    const updatedElements = [...elements.filter(el => el.id !== draggedElement.id), updatedElement];\n    setElements(updatedElements); // Update canvas elements\n    setModalOpen(false); // Close modal\n    setDraggedElement(null); // Clear dragged element\n  };\n  const handleDeleteElement = id => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Delete' && draggedElement) {\n      handleDeleteElement(draggedElement.id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    onDragOver: e => e.preventDefault(),\n    onDrop: handleDrop,\n    onKeyDown: handleKeyDown,\n    tabIndex: \"0\",\n    children: [elements.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element\",\n      style: {\n        left: el.x,\n        top: el.y\n      },\n      draggable: true,\n      onDragStart: event => {\n        event.dataTransfer.setData('text/plain', 'Label');\n        setDraggedElement(el); // Track the element being dragged\n      },\n      onDragEnd: event => {\n        // No action needed on drag end\n      },\n      children: el.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)), draggedElement && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element\",\n      style: {\n        left: draggedElement.x,\n        top: draggedElement.y,\n        opacity: '0.4'\n      },\n      children: draggedElement.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      element: draggedElement,\n      onSaveChanges: handleSaveChanges,\n      onClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"vvjWIr8H5KRrQdfgDIb2Vo+Cb1c=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Canvas","_s","elements","setElements","modalOpen","setModalOpen","draggedElement","setDraggedElement","handleDrop","event","preventDefault","elementType","dataTransfer","getData","clientX","clientY","newElement","id","Date","now","type","x","y","text","fontSize","fontWeight","existingElement","find","el","updatedElements","map","handleSaveChanges","config","updatedElement","filter","handleDeleteElement","handleKeyDown","key","className","onDragOver","e","onDrop","onKeyDown","tabIndex","children","index","style","left","top","draggable","onDragStart","setData","onDragEnd","fileName","_jsxFileName","lineNumber","columnNumber","opacity","element","onSaveChanges","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/Canvas.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from './Modal';\nimport './Canvas.css'; // CSS file for specific canvas styles\n\nfunction Canvas() {\n  const [elements, setElements] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [draggedElement, setDraggedElement] = useState(null); // Track the element being dragged\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const elementType = event.dataTransfer.getData('text/plain');\n    const { clientX, clientY } = event;\n\n    const newElement = {\n      id: Date.now(), // Unique ID for new elements\n      type: elementType,\n      x: clientX,\n      y: clientY,\n      text: 'Label', // Default text\n      fontSize: '16px', // Default font size\n      fontWeight: 'normal' // Default font weight\n      // Add other default configurations\n    };\n\n    const existingElement = elements.find(el => el.id === draggedElement?.id);\n\n    if (existingElement) {\n      // Move existing element\n      const updatedElements = elements.map(el =>\n        el.id === draggedElement.id ? { ...el, x: clientX, y: clientY } : el\n      );\n      setElements(updatedElements);\n    } else {\n      // New element dropped\n      setModalOpen(true); // Open modal for configuration\n      setDraggedElement(newElement); // Track the element being dragged\n    }\n  };\n\n  const handleSaveChanges = (config) => {\n    const updatedElement = {\n      ...draggedElement,\n      ...config\n    };\n\n    const updatedElements = [...elements.filter(el => el.id !== draggedElement.id), updatedElement];\n    setElements(updatedElements); // Update canvas elements\n    setModalOpen(false); // Close modal\n    setDraggedElement(null); // Clear dragged element\n  };\n\n  const handleDeleteElement = (id) => {\n    const updatedElements = elements.filter(el => el.id !== id);\n    setElements(updatedElements);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Delete' && draggedElement) {\n      handleDeleteElement(draggedElement.id);\n    }\n  };\n\n  return (\n    <div className='canvas' onDragOver={(e) => e.preventDefault()} onDrop={handleDrop} onKeyDown={handleKeyDown} tabIndex=\"0\">\n      {/* Render dropped elements */}\n      {elements.map((el, index) => (\n        <div\n          key={index}\n          className='element'\n          style={{ left: el.x, top: el.y }}\n          draggable={true}\n          onDragStart={(event) => {\n            event.dataTransfer.setData('text/plain', 'Label');\n            setDraggedElement(el); // Track the element being dragged\n          }}\n          onDragEnd={(event) => {\n            // No action needed on drag end\n          }}\n        >\n          {el.text}\n        </div>\n      ))}\n\n      {/* Render dragged element */}\n      {draggedElement && (\n        <div\n          className='element'\n          style={{ left: draggedElement.x, top: draggedElement.y, opacity: '0.4' }}\n        >\n          {draggedElement.text}\n        </div>\n      )}\n\n      {/* Modal for configuration */}\n      {modalOpen && (\n        <Modal\n          element={draggedElement}\n          onSaveChanges={handleSaveChanges}\n          onClose={() => setModalOpen(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}