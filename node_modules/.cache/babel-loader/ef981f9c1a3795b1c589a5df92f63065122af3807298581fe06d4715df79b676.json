{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\components\\\\ElementList\\\\ElementList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContainer } from 'react-drag-drop-container';\nimport ElementItem from '../ElementItem/ElementItem';\nimport styles from './elementList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialConfig = {\n  text: '',\n  x: '',\n  y: '',\n  fontSize: '',\n  fontWeight: ''\n};\nconst elements = [{\n  id: '',\n  elementType: 'Label',\n  config: {\n    ...initialConfig\n  }\n}, {\n  id: '',\n  elementType: 'Input',\n  config: {\n    ...initialConfig\n  }\n}, {\n  id: '',\n  elementType: 'Button',\n  config: {\n    ...initialConfig\n  }\n}];\nconst ElementList = () => {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [draggingElement, setDraggingElement] = useState(null);\n  const handleDragEnd = () => {\n    setDraggingElement(null);\n    setDragging(false);\n  };\n  const handleDragStart = element => {\n    setDraggingElement(element);\n    setDragging(true);\n  };\n  const isElementDragging = element => {\n    if (dragging && (draggingElement === null || draggingElement === void 0 ? void 0 : draggingElement.elementType) === element.elementType) {\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.ElementList,\n    children: elements.map(element => /*#__PURE__*/_jsxDEV(DragDropContainer, {\n      targetKey: \"elements\",\n      dragElemOpacity: 1,\n      dragData: element,\n      onDragStart: () => handleDragStart(element),\n      onDragEnd: handleDragEnd,\n      customDragElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.ElementList__shadowElement,\n        children: /*#__PURE__*/_jsxDEV(ElementItem, {\n          dragging: isElementDragging(element),\n          name: element.elementType,\n          className: styles.ElementList__shadowElementInner,\n          isShadowElement: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ElementItem, {\n        dragging: isElementDragging(element),\n        name: element.elementType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, element.elementType, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ElementList, \"yKNb5bvprZGKC11BCiGpn7rFxXU=\");\n_c = ElementList;\nexport default ElementList;\nvar _c;\n$RefreshReg$(_c, \"ElementList\");","map":{"version":3,"names":["React","useState","DragDropContainer","ElementItem","styles","jsxDEV","_jsxDEV","initialConfig","text","x","y","fontSize","fontWeight","elements","id","elementType","config","ElementList","_s","dragging","setDragging","draggingElement","setDraggingElement","handleDragEnd","handleDragStart","element","isElementDragging","className","children","map","targetKey","dragElemOpacity","dragData","onDragStart","onDragEnd","customDragElement","ElementList__shadowElement","name","ElementList__shadowElementInner","isShadowElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/components/ElementList/ElementList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContainer } from 'react-drag-drop-container';\nimport ElementItem from '../ElementItem/ElementItem';\nimport styles from './elementList.css';\n\nconst initialConfig = {\n  text: '',\n  x: '',\n  y: '',\n  fontSize: '',\n  fontWeight: '',\n};\n\nconst elements = [\n  {\n    id: '',\n    elementType: 'Label',\n    config: { ...initialConfig },\n  },\n  {\n    id: '',\n    elementType: 'Input',\n    config: { ...initialConfig },\n  },\n  {\n    id: '',\n    elementType: 'Button',\n    config: { ...initialConfig },\n  },\n];\n\nconst ElementList = () => {\n  const [dragging, setDragging] = useState(false);\n  const [draggingElement, setDraggingElement] = useState(null);\n\n  const handleDragEnd = () => {\n    setDraggingElement(null);\n    setDragging(false);\n  };\n\n  const handleDragStart = (element) => {\n    setDraggingElement(element);\n    setDragging(true);\n  };\n\n  const isElementDragging = (element) => {\n    if (dragging && draggingElement?.elementType === element.elementType) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className={styles.ElementList}>\n      {elements.map((element) => (\n        <DragDropContainer\n          targetKey=\"elements\"\n          key={element.elementType}\n          dragElemOpacity={1}\n          dragData={element}\n          onDragStart={() => handleDragStart(element)}\n          onDragEnd={handleDragEnd}\n          customDragElement={\n            <div className={styles.ElementList__shadowElement}>\n              <ElementItem\n                dragging={isElementDragging(element)}\n                name={element.elementType}\n                className={styles.ElementList__shadowElementInner}\n                isShadowElement\n              />\n            </div>\n          }\n        >\n          <ElementItem dragging={isElementDragging(element)} name={element.elementType} />\n        </DragDropContainer>\n      ))}\n    </div>\n  );\n};\n\nexport default ElementList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}