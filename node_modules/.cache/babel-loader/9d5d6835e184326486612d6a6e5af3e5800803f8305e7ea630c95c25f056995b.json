{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\mini-page-builder\\\\src\\\\components\\\\Board\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Label, Input, Button } from '../Elements';\nimport ElementWrapper from '../ElementWrapper/ElementWrapper';\nimport Modal from '../Modal/Modal';\nimport './board.css'; // Import the CSS file for styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [boardElements, setBoardElements] = useState([]);\n  const boardRef = useRef(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [initialElement, setInitialElement] = useState(null);\n  useEffect(() => {\n    const boardElementsInLocalStorage = localStorage.getItem('boardElements');\n    if (boardElementsInLocalStorage) {\n      setBoardElements(JSON.parse(boardElementsInLocalStorage));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('boardElements', JSON.stringify(boardElements));\n  }, [boardElements]);\n  const handleOnDragOver = e => {\n    e.preventDefault();\n  };\n  const handleOnDrop = e => {\n    e.preventDefault();\n    setSelectedElement(null);\n    if (e.dataTransfer.getData('elementType')) {\n      setInitialElement({\n        id: uuidv4(),\n        elementType: e.dataTransfer.getData('elementType'),\n        config: {\n          text: e.dataTransfer.getData('elementType'),\n          x: e.clientX - boardRef.current.getBoundingClientRect().left,\n          y: e.clientY - boardRef.current.getBoundingClientRect().top,\n          fontSize: '',\n          fontWeight: ''\n        }\n      });\n      setModalOpen(true);\n    }\n  };\n  const handleBoardOnClick = e => {\n    if (e.target === boardRef.current) {\n      setSelectedElement(null);\n    }\n  };\n  const addBoardElement = newElement => {\n    setBoardElements([...boardElements, newElement]);\n  };\n  const deleteBoardElement = elementID => {\n    setBoardElements(boardElements.filter(element => element.id !== elementID));\n  };\n  const updateBoardElement = (elementID, elementConfig) => {\n    setBoardElements(boardElements.map(element => {\n      if (element.id === elementID) {\n        return {\n          ...element,\n          config: elementConfig\n        };\n      }\n      return element;\n    }));\n  };\n  const getElementJSX = element => {\n    const style = {\n      fontSize: `${element.config.fontSize}px`,\n      fontWeight: parseInt(`${element.config.fontWeight}`, 10) || 400\n    };\n    switch (element.elementType) {\n      case 'Label':\n        return /*#__PURE__*/_jsxDEV(Label, {\n          text: element.config.text,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }, this);\n      case 'Input':\n        return /*#__PURE__*/_jsxDEV(Input, {\n          text: element.config.text,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this);\n      case 'Button':\n        return /*#__PURE__*/_jsxDEV(Button, {\n          text: element.config.text,\n          style: style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const handleOnKeyDown = e => {\n    if (selectedElement) {\n      if (e.key === 'Enter') {\n        setModalOpen(true);\n      } else if (e.key === 'Delete') {\n        deleteBoardElement(selectedElement.id);\n      }\n    }\n  };\n  const onElementSave = (elementID, elementConfig) => {\n    updateBoardElement(elementID, elementConfig);\n    setModalOpen(false);\n    setSelectedElement(null);\n  };\n  const onNewElementSave = elementConfig => {\n    if (initialElement) {\n      const newElement = {\n        id: initialElement.id,\n        elementType: initialElement.elementType,\n        config: {\n          text: elementConfig.text,\n          x: elementConfig.x,\n          y: elementConfig.y,\n          fontSize: elementConfig.fontSize || '',\n          fontWeight: elementConfig.fontWeight || ''\n        }\n      };\n      addBoardElement(newElement);\n      setInitialElement(null);\n    }\n    setModalOpen(false);\n  };\n  const onModalClose = () => {\n    setModalOpen(false);\n    setInitialElement(null);\n    setSelectedElement(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: boardRef,\n      className: \"Board\",\n      onDragOver: handleOnDragOver,\n      onDrop: handleOnDrop,\n      onClick: handleBoardOnClick,\n      onKeyDown: handleOnKeyDown,\n      tabIndex: -1,\n      children: boardElements.map(element => /*#__PURE__*/_jsxDEV(ElementWrapper, {\n        element: element,\n        updateBoardElement: updateBoardElement,\n        setSelectedElement: setSelectedElement,\n        selectedElement: selectedElement,\n        children: getElementJSX(element)\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      selectedElement: selectedElement,\n      initialElement: initialElement,\n      closeModal: onModalClose,\n      onElementSave: onElementSave,\n      onNewElementSave: onNewElementSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Board, \"ntwHZY3PchgUofGjdYakl++zbW0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useRef","useEffect","v4","uuidv4","Label","Input","Button","ElementWrapper","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","boardElements","setBoardElements","boardRef","modalOpen","setModalOpen","selectedElement","setSelectedElement","initialElement","setInitialElement","boardElementsInLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","handleOnDragOver","e","preventDefault","handleOnDrop","dataTransfer","getData","id","elementType","config","text","x","clientX","current","getBoundingClientRect","left","y","clientY","top","fontSize","fontWeight","handleBoardOnClick","target","addBoardElement","newElement","deleteBoardElement","elementID","filter","element","updateBoardElement","elementConfig","map","getElementJSX","style","parseInt","fileName","_jsxFileName","lineNumber","columnNumber","handleOnKeyDown","key","onElementSave","onNewElementSave","onModalClose","children","ref","className","onDragOver","onDrop","onClick","onKeyDown","tabIndex","open","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/mini-page-builder/src/components/Board/Board.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Label, Input, Button } from '../Elements';\nimport ElementWrapper from '../ElementWrapper/ElementWrapper';\nimport Modal from '../Modal/Modal';\nimport './board.css'; // Import the CSS file for styles\n\nconst Board = () => {\n  const [boardElements, setBoardElements] = useState([]);\n  const boardRef = useRef(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [initialElement, setInitialElement] = useState(null);\n\n  useEffect(() => {\n    const boardElementsInLocalStorage = localStorage.getItem('boardElements');\n    if (boardElementsInLocalStorage) {\n      setBoardElements(JSON.parse(boardElementsInLocalStorage));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('boardElements', JSON.stringify(boardElements));\n  }, [boardElements]);\n\n  const handleOnDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleOnDrop = (e) => {\n    e.preventDefault();\n    setSelectedElement(null);\n    if (e.dataTransfer.getData('elementType')) {\n      setInitialElement({\n        id: uuidv4(),\n        elementType: e.dataTransfer.getData('elementType'),\n        config: {\n          text: e.dataTransfer.getData('elementType'),\n          x: e.clientX - boardRef.current.getBoundingClientRect().left,\n          y: e.clientY - boardRef.current.getBoundingClientRect().top,\n          fontSize: '',\n          fontWeight: '',\n        },\n      });\n      setModalOpen(true);\n    }\n  };\n\n  const handleBoardOnClick = (e) => {\n    if (e.target === boardRef.current) {\n      setSelectedElement(null);\n    }\n  };\n\n  const addBoardElement = (newElement) => {\n    setBoardElements([...boardElements, newElement]);\n  };\n\n  const deleteBoardElement = (elementID) => {\n    setBoardElements(boardElements.filter((element) => element.id !== elementID));\n  };\n\n  const updateBoardElement = (elementID, elementConfig) => {\n    setBoardElements(\n      boardElements.map((element) => {\n        if (element.id === elementID) {\n          return { ...element, config: elementConfig };\n        }\n        return element;\n      })\n    );\n  };\n\n  const getElementJSX = (element) => {\n    const style = {\n      fontSize: `${element.config.fontSize}px`,\n      fontWeight: parseInt(`${element.config.fontWeight}`, 10) || 400,\n    };\n\n    switch (element.elementType) {\n      case 'Label':\n        return <Label text={element.config.text} style={style} />;\n      case 'Input':\n        return <Input text={element.config.text} style={style} />;\n      case 'Button':\n        return <Button text={element.config.text} style={style} />;\n      default:\n        return null;\n    }\n  };\n\n  const handleOnKeyDown = (e) => {\n    if (selectedElement) {\n      if (e.key === 'Enter') {\n        setModalOpen(true);\n      } else if (e.key === 'Delete') {\n        deleteBoardElement(selectedElement.id);\n      }\n    }\n  };\n\n  const onElementSave = (elementID, elementConfig) => {\n    updateBoardElement(elementID, elementConfig);\n    setModalOpen(false);\n    setSelectedElement(null);\n  };\n\n  const onNewElementSave = (elementConfig) => {\n    if (initialElement) {\n      const newElement = {\n        id: initialElement.id,\n        elementType: initialElement.elementType,\n        config: {\n          text: elementConfig.text,\n          x: elementConfig.x,\n          y: elementConfig.y,\n          fontSize: elementConfig.fontSize || '',\n          fontWeight: elementConfig.fontWeight || '',\n        },\n      };\n      addBoardElement(newElement);\n      setInitialElement(null);\n    }\n    setModalOpen(false);\n  };\n\n  const onModalClose = () => {\n    setModalOpen(false);\n    setInitialElement(null);\n    setSelectedElement(null);\n  };\n\n  return (\n    <>\n      <div\n        ref={boardRef}\n        className=\"Board\"\n        onDragOver={handleOnDragOver}\n        onDrop={handleOnDrop}\n        onClick={handleBoardOnClick}\n        onKeyDown={handleOnKeyDown}\n        tabIndex={-1}\n      >\n        {boardElements.map((element) => (\n          <ElementWrapper\n            key={element.id}\n            element={element}\n            updateBoardElement={updateBoardElement}\n            setSelectedElement={setSelectedElement}\n            selectedElement={selectedElement}\n          >\n            {getElementJSX(element)}\n          </ElementWrapper>\n        ))}\n      </div>\n      <Modal\n        open={modalOpen}\n        selectedElement={selectedElement}\n        initialElement={initialElement}\n        closeModal={onModalClose}\n        onElementSave={onElementSave}\n        onNewElementSave={onNewElementSave}\n      />\n    </>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}